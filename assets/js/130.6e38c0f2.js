(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{447:function(t,v,_){"use strict";_.r(v);var d=_(3),e=Object(d.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"数据结构与算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据结构与算法"}},[t._v("#")]),t._v(" 数据结构与算法")]),t._v(" "),v("h2",{attrs:{id:"基础分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基础分类"}},[t._v("#")]),t._v(" 基础分类")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("Fundamentals")]),t._v(" "),v("th"),t._v(" "),v("th",[t._v("基本")])])]),t._v(" "),v("tbody",[v("tr",[v("td"),t._v(" "),v("td",[t._v("Array")]),t._v(" "),v("td",[t._v("数组")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("String")]),t._v(" "),v("td",[t._v("字符串")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Sorting")]),t._v(" "),v("td",[t._v("排序")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Matrix")]),t._v(" "),v("td",[t._v("矩阵")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Simulation")]),t._v(" "),v("td",[t._v("模拟")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Enumeration")]),t._v(" "),v("td",[t._v("枚举")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("String Matching")]),t._v(" "),v("td",[t._v("字符串匹配")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Bucket Sort")]),t._v(" "),v("td",[t._v("桶排序")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Counting Sort")]),t._v(" "),v("td",[t._v("计数排序")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Radix Sort")]),t._v(" "),v("td",[t._v("基数排序")])]),t._v(" "),v("tr",[v("td",[t._v("Algorithms")]),t._v(" "),v("td"),t._v(" "),v("td",[t._v("算法")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Dynamic Programming")]),t._v(" "),v("td",[t._v("动态规划")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Depth-First Search")]),t._v(" "),v("td",[t._v("深度优先搜索")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Breadth-First Search")]),t._v(" "),v("td",[t._v("广度优先搜索")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Greedy")]),t._v(" "),v("td",[t._v("贪心")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Binary Search")]),t._v(" "),v("td",[t._v("二分查找")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Backtracking")]),t._v(" "),v("td",[t._v("回溯")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Recursion")]),t._v(" "),v("td",[t._v("递归")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Divide and Conquer")]),t._v(" "),v("td",[t._v("分治")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Memoization")]),t._v(" "),v("td",[t._v("记忆化搜索")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Merge Sort")]),t._v(" "),v("td",[t._v("归并排序")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Quickselect")]),t._v(" "),v("td",[t._v("快速选择")])]),t._v(" "),v("tr",[v("td",[t._v("Common Data Structures")]),t._v(" "),v("td"),t._v(" "),v("td",[t._v("基础数据结构")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Hash Table")]),t._v(" "),v("td",[t._v("哈希表")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Tree")]),t._v(" "),v("td",[t._v("树")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Binary Tree")]),t._v(" "),v("td",[t._v("二叉树")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Stack")]),t._v(" "),v("td",[t._v("栈")])]),t._v(" "),v("tr",[v("td",[t._v("Advanced Data Structures")]),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Union Find")]),t._v(" "),v("td",[t._v("并查集")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Trie")]),t._v(" "),v("td",[t._v("字典树")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Segment Tree")]),t._v(" "),v("td",[t._v("线段树")])]),t._v(" "),v("tr",[v("td",[t._v("Techniques")]),t._v(" "),v("td"),t._v(" "),v("td",[t._v("技巧")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Two Pointers")]),t._v(" "),v("td",[t._v("双指针")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Bit Manipulation")]),t._v(" "),v("td",[t._v("位运算")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Prefix Sum")]),t._v(" "),v("td",[t._v("前缀求和")])])])]),t._v(" "),v("h2",{attrs:{id:"leetcode题目"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#leetcode题目"}},[t._v("#")]),t._v(" Leetcode题目")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("分类")]),t._v(" "),v("th",[t._v("分类题")]),t._v(" "),v("th",[t._v("leetcode地址")]),t._v(" "),v("th",[t._v("难度")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("双指针")]),t._v(" "),v("td",[t._v("有序数组的 Two Sum")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("两数平方和")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/sum-of-square-numbers/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("反转字符串中的元音字符")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/reverse-vowels-of-a-string/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("回文字符串")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/valid-palindrome-ii/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("归并两个有序数组")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/merge-sorted-array/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("判断链表是否存在环")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/linked-list-cycle/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("通过删除字母匹配到字典里最长单词")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/longest-word-in-dictionary-through-deleting/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td",[t._v("链表")]),t._v(" "),v("td",[t._v("合并两个排序的链表")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/he-bing-liang-ge-pai-xu-de-lian-biao-lcof/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("从尾到头打印链表")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("相交链表")]),t._v(" "),v("td"),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("翻转链表")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/reverse-linked-list/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("返回倒数第 k 个节点")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/kth-node-from-end-of-list-lcci/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("环形链表")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/linked-list-cycle/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("链表中倒数第k个节点")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("复制带随机指针的链表")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/copy-list-with-random-pointer/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("交换链表中的节点")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/swapping-nodes-in-a-linked-list/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("两两交换链表中的节点")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/swap-nodes-in-pairs/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("旋转链表")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/rotate-list/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("K 个一组翻转链表")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/reverse-nodes-in-k-group")]),t._v(" "),v("td",[t._v("困难")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("合并 k 个升序链表")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/merge-k-sorted-lists/")]),t._v(" "),v("td",[t._v("困难")])]),t._v(" "),v("tr",[v("td",[t._v("二叉树")]),t._v(" "),v("td",[t._v("二叉树的中序遍历")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/binary-tree-inorder-traversal/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("二叉树的前序遍历")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/binary-tree-preorder-traversal/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("二叉树的后序遍历")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/binary-tree-postorder-traversal/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("二叉树的最大深度")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/maximum-depth-of-binary-tree")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("翻转二叉树")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/invert-binary-tree")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("平衡二叉树")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/balanced-binary-tree")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("二叉树的深度")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/er-cha-shu-de-shen-du-lcof")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("二叉树每层的最大值")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/hPov7L")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("二叉树剪枝")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/pOCWxh")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("二叉树的最近公共祖先")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("二叉树染色")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/er-cha-shu-ran-se-UGC")]),t._v(" "),v("td",[t._v("困难")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("二叉树任务调度")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/er-cha-shu-ren-wu-diao-du")]),t._v(" "),v("td",[t._v("困难")])]),t._v(" "),v("tr",[v("td",[t._v("堆（优先队列）")]),t._v(" "),v("td",[t._v("数据流中的第 K 大元素")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/kth-largest-element-in-a-stream/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("最小的k个数")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/zui-xiao-de-kge-shu-lcof/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("最后一块石头的重量")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/last-stone-weight/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("重构字符串")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/reorganize-string/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("前K个高频元素")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/top-k-frequent-elements/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("前K个高频单词")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/top-k-frequent-words/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("任务调度器")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/task-scheduler/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("分割数组为连续子序列")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/split-array-into-consecutive-subsequences/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("滑动窗口最大值")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/sliding-window-maximum/")]),t._v(" "),v("td",[t._v("困难")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("数据流的中位数")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/find-median-from-data-stream/")]),t._v(" "),v("td",[t._v("困难")])]),t._v(" "),v("tr",[v("td",[t._v("栈")]),t._v(" "),v("td",[t._v("有效的括号")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/valid-parentheses/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("用队列实现栈")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/implement-stack-using-queues/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("最小栈")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/min-stack/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("字符串解码")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/decode-string/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("基本计算器")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/basic-calculator/")]),t._v(" "),v("td",[t._v("困难")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("接雨水")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/trapping-rain-water/")]),t._v(" "),v("td",[t._v("困难")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("最长有效括号")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/longest-valid-parentheses/")]),t._v(" "),v("td",[t._v("困难")])]),t._v(" "),v("tr",[v("td",[t._v("排序")]),t._v(" "),v("td",[t._v("冒泡排序")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/sort-an-array/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("选择排序")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/sort-an-array/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("快速排序")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/sort-an-array/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("基数排序")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/sort-an-array/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("二路归并排序")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/sort-an-array/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("希尔排序")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/sort-an-array/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("插入排序")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/sort-an-array/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("堆排序")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/sort-an-array/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("计数排序")]),t._v(" "),v("td"),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("桶排序")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/top-k-frequent-elements/description/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("荷兰国旗问题")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/sort-colors/description/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td",[t._v("二分查找")]),t._v(" "),v("td",[t._v("搜索插入位置")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/search-insert-position/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("二分查找")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/binary-search")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("Sqrt(x)")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/sqrtx/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("寻找两个正序数组的中位数")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/median-of-two-sorted-arrays/")]),t._v(" "),v("td",[t._v("困难")])]),t._v(" "),v("tr",[v("td",[t._v("哈希")]),t._v(" "),v("td",[t._v("哈希_两数之和")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/two-sum/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("哈希_快乐数")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/happy-number/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("哈希_存在重复元素")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/contains-duplicate/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("哈希_丢失的数字")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/missing-number/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("哈希_罗马数字转整数")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/roman-to-integer")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("哈希_无重复字符的最长子串")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("哈希_单词拆分")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/word-break/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("哈希_LRU缓存机制")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/lru-cache/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("哈希_缺失的第一个正数")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/lru-cache/")]),t._v(" "),v("td",[t._v("困难")])]),t._v(" "),v("tr",[v("td",[t._v("回溯")]),t._v(" "),v("td",[t._v("二进制手表")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/binary-watch/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("全排列")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/permutations")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("括号生成")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/generate-parentheses/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("电话号码的字母组合")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("组合")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/combinations/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("删除无效的括号")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/remove-invalid-parentheses/")]),t._v(" "),v("td",[t._v("困难")])]),t._v(" "),v("tr",[v("td",[t._v("动态规划")]),t._v(" "),v("td",[t._v("最长递增子序列")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/longest-increasing-subsequence")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("最长公共子序列")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/qJnOS7/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("买卖股票的最佳时机")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("使用最小花费爬楼梯")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/min-cost-climbing-stairs/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("最长回文子串")]),t._v(" "),v("td"),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("按摩师")]),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("背包问题")]),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("编辑距离")]),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("贪心思想")]),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("分治")]),t._v(" "),v("td",[t._v("给表达式加括号")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/different-ways-to-add-parentheses/description/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("不同的二叉搜索树")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/unique-binary-search-trees-ii/description/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td",[t._v("搜索")]),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("数学")]),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("树")]),t._v(" "),v("td",[t._v("树的高度")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/maximum-depth-of-binary-tree/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("平衡树")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/balanced-binary-tree/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("两节点的最长路径")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/diameter-of-binary-tree/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("翻转树")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/invert-binary-tree/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("归并两棵树")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/merge-two-binary-trees/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("判断路径和是否等于一个数")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/path-sum/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("统计路径和等于一个数的路径数量")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/path-sum-iii/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("子树")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/subtree-of-another-tree/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("树的对称")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/symmetric-tree/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("最小路径")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/minimum-depth-of-binary-tree/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("统计左叶子节点的和")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/sum-of-left-leaves/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("相同节点值的最大路径长度")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/longest-univalue-path/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("间隔遍历")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/house-robber-iii/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("找出二叉树中第二小的节点")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("一棵树每层节点的平均数")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/average-of-levels-in-binary-tree/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("得到左下角的节点")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/find-bottom-left-tree-value/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("非递归实现二叉树的前序遍历")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/binary-tree-preorder-traversal/description/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("非递归实现二叉树的后序遍历")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/binary-tree-postorder-traversal/description/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("非递归实现二叉树的中序遍历")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/binary-tree-inorder-traversal/description/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("修剪二叉查找树")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/trim-a-binary-search-tree/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("寻找二叉查找树的第 k 个元素")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/kth-smallest-element-in-a-bst/description/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("把二叉查找树每个节点的值都加上比它大的节点的值")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/convert-bst-to-greater-tree/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("二叉查找树的最近公共祖先")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("二叉树的最近公共祖先")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/description/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("从有序数组中构造二叉查找树")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("根据有序链表构造平衡的二叉查找树")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/description/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("在二叉查找树中寻找两个节点，使它们的和为一个给定值")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/two-sum-iv-input-is-a-bst/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("在二叉查找树中查找两个节点之差的最小绝对值")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/minimum-absolute-difference-in-bst/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("寻找二叉查找树中出现次数最多的值")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/find-mode-in-binary-search-tree/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("实现一个 Trie")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/implement-trie-prefix-tree/description/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("实现一个 Trie，用来求前缀和")]),t._v(" "),v("td",[t._v("https://leetcode.com/problems/map-sum-pairs/description/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("栈和队列")]),t._v(" "),v("td",[t._v("用栈实现队列")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/implement-queue-using-stacks/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("用队列实现栈")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/implement-stack-using-queues/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("最小值栈")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/min-stack/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("用栈实现括号匹配")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/valid-parentheses/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("数组中元素与下一个比它大的元素之间的距离")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/daily-temperatures/description/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("循环数组中比当前元素大的下一个元素")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/next-greater-element-ii/description/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td",[t._v("字符串")]),t._v(" "),v("td",[t._v("有效的字母异位词")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/valid-anagram/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("计算一组字符集合可以组成的回文字符串的最大长度")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/longest-palindrome/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("字符串同构")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/isomorphic-strings/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("回文子字符串个数")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/palindromic-substrings/description/")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("判断一个整数是否是回文数")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/palindrome-number/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("统计二进制字符串中连续 1 和连续 0 数量相同的子字符串个数")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/count-binary-substrings/description/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td",[t._v("数组与矩阵")]),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("图")]),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("位运算")]),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("其他")]),t._v(" "),v("td",[t._v("回文数")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/palindrome-number")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[t._v("只出现一次的数字")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/WGki4K")]),t._v(" "),v("td",[t._v("中等")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("递归")]),t._v(" "),v("td",[t._v("反转字符串")]),t._v(" "),v("td",[t._v("https://leetcode-cn.com/problems/reverse-string/")]),t._v(" "),v("td",[t._v("简单")])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("深度优先遍历")]),t._v(" "),v("td",[t._v("深度优先遍历")]),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("广度优先遍历")]),t._v(" "),v("td",[t._v("广度优先遍历")]),t._v(" "),v("td"),t._v(" "),v("td")])])])])}),[],!1,null,null,null);v.default=e.exports}}]);