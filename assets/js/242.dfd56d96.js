(window.webpackJsonp=window.webpackJsonp||[]).push([[242],{560:function(a,e,s){"use strict";s.r(e);var t=s(3),r=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"lerna"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lerna"}},[a._v("#")]),a._v(" Lerna")]),a._v(" "),e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),e("p",[e("code",[a._v("npm install --global lerna")])]),a._v(" "),e("h2",{attrs:{id:"创建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建"}},[a._v("#")]),a._v(" 创建")]),a._v(" "),e("p",[e("code",[a._v("git init lerna-repo && cd lerna-repo")])]),a._v(" "),e("h2",{attrs:{id:"初始化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[a._v("#")]),a._v(" 初始化")]),a._v(" "),e("p",[e("code",[a._v("lerna init")])]),a._v(" "),e("h2",{attrs:{id:"工程目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工程目录"}},[a._v("#")]),a._v(" 工程目录")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("lerna-repo/\n  packages/\n  package.json\n  lerna.json\n")])])]),e("h2",{attrs:{id:"创建package"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建package"}},[a._v("#")]),a._v(" 创建package")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$ lerna create module-1\n$ lerna create module-2\n")])])]),e("h2",{attrs:{id:"查看创建的包名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看创建的包名"}},[a._v("#")]),a._v(" 查看创建的包名")]),a._v(" "),e("p",[e("code",[a._v("lerna list")])]),a._v(" "),e("h2",{attrs:{id:"yarn-workspaces-lerna-hoisting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yarn-workspaces-lerna-hoisting"}},[a._v("#")]),a._v(" yarn workspaces & Lerna Hoisting")]),a._v(" "),e("p",[a._v("统一安装node_mudules在根目录中")]),a._v(" "),e("p",[a._v("配置 lerna.json:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('{\n  ...\n  "npmClient": "yarn",\n  "useWorkspaces": true\n}\n\n')])])]),e("p",[a._v("顶级 package.json 必须包含一个 workspaces 数组:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('{\n  "private": true,\n  ...\n  "workspaces": ["packages/*"]\n}\n\n')])])]),e("h2",{attrs:{id:"修改-lerna-publishconfig"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改-lerna-publishconfig"}},[a._v("#")]),a._v(" 修改 lerna publishConfig")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('// lerna.json\n{\n  "ignoreChanges": [\n    "ignored-file",\n    "**/__tests__/**",\n    "**/*.md"\n  ],\n  "command": {\n    "publish": {\n      "registry": "http://localhost:4873"\n    },\n    "version": {\n      "conventionalCommits": true,\n      "message": "chore(release): publish"\n    }\n  }\n}\n')])])]),e("h2",{attrs:{id:"commitlint-commitizen"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commitlint-commitizen"}},[a._v("#")]),a._v(" commitlint & commitizen")]),a._v(" "),e("p",[a._v("代码规范相关的")]),a._v(" "),e("h2",{attrs:{id:"安装-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-2"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),e("p",[e("code",[a._v("yarn install 或 lerna bootstrap")])]),a._v(" "),e("h2",{attrs:{id:"给指定-package-安装依赖"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#给指定-package-安装依赖"}},[a._v("#")]),a._v(" 给指定 package 安装依赖：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("# 或者（推荐）\n$ lerna add [包名] packages/module-1\n# 或者\n$ lerna add [包名] --scope=module-1\n# 或者\n$ lerna add [包名] **/module-1\n# 或者\n$ yarn workspace module-1 add [包名]\n")])])]),e("h2",{attrs:{id:"给所有包安装依赖"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#给所有包安装依赖"}},[a._v("#")]),a._v(" 给所有包安装依赖")]),a._v(" "),e("p",[a._v("会在所有package.json安装这个依赖")]),a._v(" "),e("p",[e("code",[a._v("lerna add [包名]")])]),a._v(" "),e("h2",{attrs:{id:"workspace-之间的依赖"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#workspace-之间的依赖"}},[a._v("#")]),a._v(" workspace 之间的依赖")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$ lerna add module-2 --scope module-1\n# 或者\n$ lerna add module-2 packages/module-1\n")])])]),e("h2",{attrs:{id:"外部公用的依赖安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#外部公用的依赖安装"}},[a._v("#")]),a._v(" 外部公用的依赖安装")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$ yarn add -WD typescript\n")])])]),e("h2",{attrs:{id:"发布包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发布包"}},[a._v("#")]),a._v(" 发布包")]),a._v(" "),e("p",[a._v("发布我们的包到 npm 包， 如果我们想发布到自己私有的npm 上的话， 只要在package.json 把register上地址替换即可")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("npm publish\n\n")])])]),e("h2",{attrs:{id:"link"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#link"}},[a._v("#")]),a._v(" link")]),a._v(" "),e("p",[e("code",[a._v("lerna link")])]),a._v(" "),e("h2",{attrs:{id:"run"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[a._v("#")]),a._v(" run")]),a._v(" "),e("p",[e("code",[a._v("lerna run <script>")])])])}),[],!1,null,null,null);e.default=r.exports}}]);